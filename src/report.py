import os
from docx import Document
from docx.enum.table import WD_TABLE_ALIGNMENT
from docx.shared import Pt, RGBColor


class Report:
    def __init__(self, name):
        self.name = name
        # The Document object
        self.document = Document()

    def addTitle(self, text, level):
        self.document.add_heading(text=text, level=level)

    def addTable(self, svm_prediction, nb_prediction, rf_prediction, table_style):
        paragraph = self.document.add_paragraph('')
        paragraph_format = paragraph.paragraph_format
        paragraph_format.space_before = Pt(18)
        paragraph_format.space_after = Pt(13)
        run = paragraph.add_run('Possible Predictions')
        run.bold = True
        font = run.font
        font.name = 'Cambria'
        font.size = Pt(12)

        table = self.document.add_table(rows=4, cols=2)
        table.alignment = WD_TABLE_ALIGNMENT.CENTER
        head_row = table.rows[0]
        head_row.height = Pt(24)
        head_row.cells[0].text = 'Model'
        head_row.cells[1].text = 'Prediction'

        head_row = table.rows[1]
        head_row.height = Pt(24)
        head_row.cells[0].text = 'SVC'
        head_row.cells[1].text = svm_prediction

        head_row = table.rows[2]
        head_row.height = Pt(24)
        head_row.cells[0].text = 'Gaussian Naive Bayes'
        head_row.cells[1].text = nb_prediction

        head_row = table.rows[3]
        head_row.height = Pt(24)
        head_row.cells[0].text = 'Random Forest Classifier'
        head_row.cells[1].text = rf_prediction

        table.style = table_style

    def addCriteria(self, criteria: list):
        paragraph = self.document.add_paragraph('')
        paragraph_format = paragraph.paragraph_format
        paragraph_format.space_before = Pt(18)
        run1 = paragraph.add_run('Signs and Symptoms')
        run1.bold = True
        font = run1.font
        font.name = 'Cambria'
        font.size = Pt(12)

        for criterion in criteria:
            paragraph = self.document.add_paragraph('', style='ListBullet')
            run = paragraph.add_run(criterion)
            font = run.font
            font.name = 'Cambria'
            font.size = Pt(12)

    def addFinalPrediction(self, text):
        paragraph = self.document.add_paragraph('')
        paragraph_format = paragraph.paragraph_format
        paragraph_format.space_before = Pt(24)
        run1 = paragraph.add_run(text='Final Prediction')
        run1.bold = True
        font1 = run1.font
        font1.name = 'Cambria'
        font1.size = Pt(12)
        prediction = self.document.add_paragraph('', style='ListBullet')
        run2 = prediction.add_run(text=text)
        font2 = run2.font
        font2.name = 'Cambria'
        font2.size = Pt(12)
        font2.color.rgb = RGBColor(0, 0, 255)

    def saveReport(self, folder):
        path = os.path.join(folder, self.name + '.docx')
        self.document.save(path)

    def addDisclaimer(self):
        paragraph = self.document.add_paragraph('')
        paragraph_format = paragraph.paragraph_format
        paragraph_format.space_before = Pt(25)
        run = paragraph.add_run('Disclaimer')
        run.bold = True
        font = run.font
        font.name = 'Cambria'
        font.size = Pt(12)
        disclaimer = self.document.add_paragraph('')
        run1 = disclaimer.add_run("This report is generated by a tool powered by artificial"
                                  " intelligence. The information given is not a replacement for human"
                                  " expertise and should always be used in conjunction with clinical"
                                  " judgement. Eden inc., is not responsible for"
                                  " any misuse of this tool.")
        font1 = run1.font
        font1.name = 'Cambria'
        font1.size = Pt(11)

    def createReport(self, svm_prediction, nb_prediction, rf_prediction, final_prediction, criteria: list):
        self.addTitle('THE DISEASE PREDICTION REPORT', level=2)
        self.addCriteria(criteria=criteria)
        self.addTable(svm_prediction=svm_prediction, nb_prediction=nb_prediction, rf_prediction=rf_prediction,
                      table_style='Light Shading Accent 5')
        self.addFinalPrediction(text=final_prediction)
        self.addDisclaimer()
